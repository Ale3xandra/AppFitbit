// Generated by data binding compiler. Do not edit!
package com.fitbit.sampleandroidoauth2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import com.fitbit.sampleandroidoauth2.R;
import com.jjoe64.graphview.GraphView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutInfoBinding extends ViewDataBinding {
  @NonNull
  public final GraphView graph;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final WebView webview;

  @Bindable
  protected int mTitleText;

  @Bindable
  protected boolean mLoading;

  protected LayoutInfoBinding(Object _bindingComponent, View _root, int _localFieldCount,
      GraphView graph, ProgressBar progressBar, SwipeRefreshLayout swipeRefreshLayout,
      WebView webview) {
    super(_bindingComponent, _root, _localFieldCount);
    this.graph = graph;
    this.progressBar = progressBar;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.webview = webview;
  }

  public abstract void setTitleText(int titleText);

  public int getTitleText() {
    return mTitleText;
  }

  public abstract void setLoading(boolean loading);

  public boolean getLoading() {
    return mLoading;
  }

  @NonNull
  public static LayoutInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_info, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutInfoBinding>inflateInternal(inflater, R.layout.layout_info, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_info, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutInfoBinding>inflateInternal(inflater, R.layout.layout_info, null, false, component);
  }

  public static LayoutInfoBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutInfoBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutInfoBinding)bind(component, view, R.layout.layout_info);
  }
}
